(()=>{"use strict";var t;!function(t){t.ADDINFO="ADDINFO"}(t||(t={}));let e={array:[{title:"ee",description:"e"},{title:"eHE",description:"fee"}]},n=[];var s;!function(t){t.titleTask="titleTask",t.description="description"}(s||(s={}));class o extends HTMLElement{static get observedAttributes(){return Object.keys({titleTask:null,description:null})}attributeChangedCallback(t,e,n){this[t]=n}constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n            <div class="card">\n                <div class="task">"${this.titleTask}"</div>\n                <div class="desc">"${this.description}"</div>\n            </div>\n        `)}}customElements.define("card-element",o);class i extends HTMLElement{constructor(){super(),this.taskData=e.array,this.attachShadow({mode:"open"}),n=[...n,this]}connectedCallback(){this.render(),console.log(e)}addInfo(){var s,o,i,a,r,c;return i=this,a=void 0,c=function*(){const i=null===(s=this.shadowRoot)||void 0===s?void 0:s.querySelector('input[class="task"]'),a=null===(o=this.shadowRoot)||void 0===o?void 0:o.querySelector('input[class="info"]'),r=i.value,c=a.value;console.log("Title:",r),console.log("Description:",c),r&&c?(s=>{console.log("Dispatching action:",s);const o=JSON.parse(JSON.stringify(e));e=((e,n)=>{const{action:s,payload:o}=e;return s===t.ADDINFO?Object.assign(Object.assign({},n),{array:[...n.array,o]}):n})(s,o),n.forEach((t=>t.render())),console.log(e)})(((e,n)=>({action:t.ADDINFO,payload:{title:e,description:n}}))(r,c)):console.error("Title and description must be defined.")},new((r=void 0)||(r=Promise))((function(t,e){function n(t){try{o(c.next(t))}catch(t){e(t)}}function s(t){try{o(c.throw(t))}catch(t){e(t)}}function o(e){var o;e.done?t(e.value):(o=e.value,o instanceof r?o:new r((function(t){t(o)}))).then(n,s)}o((c=c.apply(i,a||[])).next())}))}renderTaskList(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".tasks"),n=this.taskData;null==n||n.forEach((t=>{const n=this.ownerDocument.createElement("card-element");n.setAttribute(s.titleTask,t.title),n.setAttribute(s.description,t.description),null==e||e.appendChild(n)}))}render(){if(this.shadowRoot){this.shadowRoot.innerHTML='\n            <form class="form">\n                <input placeholder="task" class="task"></input>\n                <input placeholder="info" class="info"></input>\n                <button type="button" class="button">Add Card</button>\n            </form>\n            <section class="tasks">\n                <div>task</div>\n                <div class="taskList"></div>\n            </section>\n        ',this.renderTaskList();const t=this.shadowRoot.querySelector(".form");null==t||t.addEventListener("submit",(t=>{t.preventDefault()}));const e=this.shadowRoot.querySelector(".button");null==e||e.addEventListener("click",(t=>{t.preventDefault(),this.addInfo(),this.renderTaskList()}))}}}customElements.define("app-container",i)})();